generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clientes {
  id                          Int                        @id @default(autoincrement())
  nombre                      String                     @db.VarChar(255)
  apellido                    String                     @db.VarChar(255)
  dni                         Int                        @unique
  telefono                    String?                    @db.VarChar(255)
  email                       String                     @unique @db.VarChar(255)
  password                    String                     @db.VarChar(255)
  descuento                   Int
  perros                      perros[]
  adopciones                  publicacion_adopciones[]
  donaciones                  donaciones[]
  publicaciones_reencuentros  publicacion_reencuentros[]
  turnos                      turnos[]
  historias                   historias[]
}

model administradores {
  id       Int                    @id @default(autoincrement())
  nombre   String                 @db.VarChar(255)
  apellido String                 @db.VarChar(255)
  email    String                 @unique @db.VarChar(255)
  password String                 @db.VarChar(255)
}

model perros {
  id               Int                    @id @default(autoincrement())
  nombre           String                 @db.VarChar(255)
  raza             String                 @db.VarChar(255)
  color            String                 @db.VarChar(255)
  fecha_nacimiento DateTime               @db.Timestamp(6)
  observaciones    String                 @db.VarChar(255)
  link_foto        String?                @db.VarChar(255)
  clienteId        Int?
  cliente          clientes?              @relation(fields: [clienteId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cruza            publicacion_cruzas?
  turnos           turnos[]
  historias        historias[]
}

model publicacion_servicios {
  id             Int    @id @default(autoincrement())
  servicio       String @db.VarChar(255)
  nombre         String @db.VarChar(255)
  apellido       String @db.VarChar(255)
  zona           String @db.VarChar(255)
  horario        String @db.VarChar(255)
  email_contacto String @db.VarChar(255)
}

model publicacion_adopciones {
  id            Int       @id @default(autoincrement())
  nombre        String    @db.VarChar(255)
  edad          String    @db.VarChar(255)
  raza          String    @db.VarChar(255)
  color         String    @db.VarChar(255)
  sexo          String    @db.VarChar(255)
  observaciones String    @db.VarChar(255)
  origen        String    @db.VarChar(255)
  estado        String    @db.VarChar(255)
  tamanio       String    @db.VarChar(255)
  clienteId     Int?
  cliente       clientes? @relation(fields: [clienteId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model publicacion_donaciones {
  id            Int           @id @default(autoincrement())
  nombre        String        @db.VarChar(255)
  monto         Int
  fecha_fin     DateTime      @db.Timestamp(6)
  fecha_inicio  DateTime      @db.Timestamp(6)
  monto_actual  Int
  donaciones    donaciones[]
}

model donaciones{
  id                      Int       @id @default(autoincrement())
  monto                   Int
  fecha                   DateTime  @db.Timestamp(6)
  clienteId               Int?
  cliente                 clientes? @relation(fields: [clienteId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  publicacion_donacionId  Int?
  publicacion_donacion    publicacion_donaciones? @relation(fields: [publicacion_donacionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model publicacion_cruzas{
  id                      Int       @id @default(autoincrement())
  periodo_celo            String?   @db.VarChar(255)
  sexo                    String    @db.VarChar(255)
  perroId                 Int?      @unique
  perro                   perros?   @relation(fields: [perroId], references: [id])  
}

model publicacion_reencuentros{
  id                      Int       @id @default(autoincrement())
  tipo                    String?   @db.VarChar(255)
  estado                  String?   @db.VarChar(255)
  clienteId               Int?
  cliente                 clientes? @relation(fields: [clienteId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  link_foto               String?   @db.VarChar(255)
  zona                    String?   @db.VarChar(255)
  fecha                   DateTime  @db.Timestamp(6)
  sexo                    String?   @db.VarChar(255)
  edad                    String?   @db.VarChar(255)
  caracteristicas         String?   @db.VarChar(255)
  comportamiento          String?   @db.VarChar(255)
}

model turnos{
  id          Int       @id  @default(autoincrement())
  dia         DateTime  @db.Date
  franja      String    @db.VarChar(255)
  practica    String    @db.VarChar(255)
  estado      String    @db.VarChar(255)
  id_cliente  Int
  cliente     clientes  @relation(fields: [id_cliente], references: [id], onDelete: NoAction, onUpdate: NoAction)
  id_perro    Int
  perro       perros    @relation(fields: [id_perro], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model historias{
  id              Int       @id  @default(autoincrement())
  practica        String    @db.VarChar(255)
  observaciones   String    @db.VarChar(255)
  dia             DateTime  @db.Date
  monto           Int
  peso            String?   @db.VarChar(255)
  medicamento     String?   @db.VarChar(255)
  cantMedicamento String?   @db.VarChar(255)
  id_cliente      Int
  cliente         clientes  @relation(fields: [id_cliente], references: [id], onDelete: NoAction, onUpdate: NoAction)
  id_perro        Int
  perro           perros    @relation(fields: [id_perro], references: [id], onDelete: NoAction, onUpdate: NoAction)
}